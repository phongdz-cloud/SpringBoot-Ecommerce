package com.shopme.admin.shipping;

import java.util.List;
import java.util.NoSuchElementException;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.shopme.admin.paging.PagingAndSortingHelper;
import com.shopme.admin.setting.country.CountryRepository;
import com.shopme.common.entity.Country;
import com.shopme.common.entity.ShippingRate;

@Service
@Transactional
public class ShippingRateService {

	public static final int SHIPPINGS_PER_PAGE = 10;

	@Autowired
	private ShippingRateRepository shipRepo;

	@Autowired
	private CountryRepository countryRepo;

	public List<ShippingRate> listAll() {
		return (List<ShippingRate>) shipRepo.findAll(Sort.by("country.name").ascending());
	}

	public void listByPage(int pageNum, PagingAndSortingHelper helper) {
		helper.listEntities(pageNum, SHIPPINGS_PER_PAGE, shipRepo);
	}
	
	public List<Country> listAllCountry() {
		return countryRepo.findAllByOrderByNameAsc();
	}
	
	public void save(ShippingRate shipping) {
		shipRepo.save(shipping);
	}
	
	public ShippingRate get(Integer id) throws ShippingRateNotFoundException {
		try {
			return shipRepo.findById(id).get();
		} catch (NoSuchElementException e) {
			throw new ShippingRateNotFoundException("Could not find any shipping with ID: " + id);
		}
	}
	
	public void delete(Integer id) throws ShippingRateNotFoundException {
		Long countById = shipRepo.countById(id);
		if (countById == null || countById == 0) {
			throw new ShippingRateNotFoundException("Could not find any shipping with Id " + id);
		}
		shipRepo.deleteById(id);
	}

}
