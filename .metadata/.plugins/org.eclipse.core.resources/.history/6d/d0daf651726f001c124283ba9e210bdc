package com.shopme.admin.setting.state;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import javax.persistence.EntityManager;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.shopme.common.entity.Country;

@SpringBootTest
@AutoConfigureMockMvc
@WithMockUser(username = "nam@codejava.net", password = "something", roles = "ADMIN")
public class StateRestControllerTests {
	
	@Autowired
	private EntityManager entityManager;
	
	@Autowired
	private MockMvc mockMvc;

	@Autowired
	private ObjectMapper objectMapper;
	
	@Test
	public void testListByCountries() throws Exception {
		Country countryById = entityManager.find(Country.class, 4);
		String url = "/states/list_by_country/" + countryById.getId();
		
		MvcResult result = mockMvc.perform(get(url)).andExpect(status().isOk()).andDo(print()).andReturn();
		String jsonResponse = result.getResponse().getContentAsString();
		
		StateDTO[] states = objectMapper.readValue(jsonResponse, StateDTO[].class);
		
		for(StateDTO state : states) {
			System.out.println(state);
		}
		
		assertThat(states).hasSizeGreaterThan(0);
	}
	
}
