package com.shopme.admin.shipping;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.shopme.admin.paging.PagingAndSortingHelper;
import com.shopme.admin.paging.PagingAndSortingParam;
import com.shopme.common.entity.Country;
import com.shopme.common.entity.Customer;
import com.shopme.common.entity.ShippingRate;
import com.shopme.common.exception.CustomerNotFoundException;

@Controller
public class ShippingRateController {
	@Autowired
	private ShippingRateService service;
	
	@GetMapping("/shipping")
	public String listFirstPage(Model model) {
		return "redirect:/shipping/page/1?sortField=country.name&sortDir=asc";
	}

	@GetMapping("/shipping/page/{pageNumber}")
	public String listByPage(
			@PagingAndSortingParam(listName = "listShippings", moduleURL = "/shipping") PagingAndSortingHelper helper,
			@PathVariable(name = "pageNumber") int pageNum) {
		service.listByPage(pageNum, helper);
		
		return "shipping/shipping_rates";
	}
	
	@GetMapping("/shipping/new")
	public String newShipping(Model model) {
		List<Country> listCountries = service.listAllCountry();
		
		model.addAttribute("shipping",new ShippingRate());
		model.addAttribute("listCountries", listCountries);
		model.addAttribute("pageTitle", "Create new Shipping Rates");
		return "shipping/shipping_rate_form";
	}
	
	@GetMapping("/shipping/edit/{id}")
	public String editCustomer(@PathVariable(name = "id") Integer id, Model model,
			RedirectAttributes redirectAttributes) {
		try {
			ShippingRate shipping = service.get(id);
			List<Country> listCountries = service.listAllCountry();
			model.addAttribute("shipping", shipping);
			model.addAttribute("listCountries", listCountries);
			model.addAttribute("pageTitle", "Edit Shipping (ID: " + id + ")");

			return "shipping/shipping_rate_form";
		} catch (ShippingRateNotFoundException e) {
			redirectAttributes.addFlashAttribute("message", e.getMessage());
			return "redirect:/shipping";
		}
	}
}
